{"ast":null,"code":"import _classCallCheck from \"/home/jandres/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jandres/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jandres/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jandres/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jandres/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jandres/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jandres/Desktop/calculator/src/containers/calculator.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addNumbers, multiplyNumbers } from '../actions/calculator';\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calculator, _Component);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.state = {\n      s1: 0,\n      s2: 0,\n      m1: 0,\n      m2: 0\n    };\n    _this.sumar = _this.sumar.bind(_assertThisInitialized(_assertThisInitialized(_this))); // console.log('m1',this.state.m1);\n    // console.log('m2',this.state.m2);\n\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"sumar\",\n    value: function sumar(s1, s2) {\n      console.log('s1', this.state.s1);\n      console.log('s2', this.state.s2);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Sumar\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        onChange: function onChange(a) {\n          return _this2.setState({\n            s1: a.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        onChange: function onChange(a) {\n          return _this2.setState({\n            s2: a.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: sumar(s1, s2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Sumar\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Restar\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.m1,\n        onChange: function onChange(a) {\n          return _this2.setState({\n            value: a.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.m2,\n        onChange: function onChange(a) {\n          return _this2.setState({\n            value: a.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.props.multiplyNumbers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Restar\")));\n    }\n  }]);\n\n  return Calculator;\n}(Component); //bind reducers to container\n\n\nfunction mapStateToProps(_ref) {\n  var calculatorReducer = _ref.calculatorReducer;\n  return {\n    calculatorReducer: calculatorReducer\n  };\n} //bind actions to container\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addNumbers: addNumbers,\n    multiplyNumbers: multiplyNumbers\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);","map":{"version":3,"sources":["/home/jandres/Desktop/calculator/src/containers/calculator.js"],"names":["React","Component","connect","bindActionCreators","addNumbers","multiplyNumbers","Calculator","props","state","s1","s2","m1","m2","sumar","bind","console","log","a","setState","target","value","mapStateToProps","calculatorReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addNumbers, multiplyNumbers } from '../actions/calculator';\n\nclass Calculator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            s1:0,\n            s2:0,\n            m1:0,\n            m2:0\n        }\n    this.sumar=this.sumar.bind(this);\n        // console.log('m1',this.state.m1);\n        // console.log('m2',this.state.m2);\n    }\n    sumar(s1,s2){\n        console.log('s1',this.state.s1);\n        console.log('s2',this.state.s2);\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <label>Sumar</label>\n                    <ul>\n                        <li><input type=\"number\"  onChange ={ a => this.setState({s1:a.target.value})}/></li>\n                        <li><input type=\"number\"  onChange ={ a => this.setState({s2:a.target.value})}/></li>\n                    </ul>\n                    <button onClick={sumar(s1,s2)}>Sumar</button>\n                </div>\n                <div>\n                    <label>Restar</label>\n                    <ul>\n                        <li><input type=\"number\" value ={this.state.m1} onChange ={ a => this.setState({value:a.target.value})}/></li>\n                        <li><input type=\"number\" value ={this.state.m2} onChange ={ a => this.setState({value:a.target.value})}/></li>\n                    </ul>\n                    <button onClick={this.props.multiplyNumbers}>Restar</button>\n                </div>\n            </div>\n        );\n    }\n}\n//bind reducers to container\nfunction mapStateToProps({ calculatorReducer }) {\n    return {\n        calculatorReducer\n    };\n}\n//bind actions to container\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({ addNumbers, multiplyNumbers }, dispatch)\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);"]},"metadata":{},"sourceType":"module"}