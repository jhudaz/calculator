describe('My First Test', function () {
  it('Does not do much!', function () {
    expect(true).to.equal(true)
  })
})

// describe('My First Test', function () {
//   it('Visits the Kitchen Sink', function () {
//     cy.visit('http://localhost:3000/')

//     cy.contains('Home')
//     cy.contains('Calculator')
//     cy.contains('Git profile').click()
//     cy.contains('Git User:')

//     cy.url().should('include', '/git-profile')

//     cy.get('input')
//       .type('jvelezpo')
//       .should('have.value', 'jvelezpo')

//     cy.get('button').click()
//   })
// })

describe('Calculator testing!', () => {
  it('Verification calculator it is working!', () => {
    cy.visit('http://localhost:3000/')
    cy.contains('Calculator').click()
    cy.get('.suma1')
      .type('{selectall}')
      .type(34)
      .should('have.value', '34')
    cy.get('.suma2')
      .type('{selectall}')
      .type(56)
      .should('have.value', '56')
    cy.get('.sumar')
      .click()
    cy.get('.multi1')
      .type('{selectall}')
      .type(10)
      .should('have.value', '10')
    cy.get('.multi2')
      .type('{selectall}')
      .type(5)
      .should('have.value', '5')
    cy.get('.multiplicar')
      .click()
    cy.get('.resta1')
      .type('{selectall}')
      .type(15)
      .should('have.value', '15')
    cy.get('.resta2')
      .type('{selectall}')
      .type(10)
      .should('have.value', '10')
    cy.get('.restar')
      .click()
    cy.get('.divi1')
      .type('{selectall}')
      .type(0)
      .should('have.value', '0')
    cy.get('.divi2')
      .type('{selectall}')
      .type(5)
      .should('have.value', '5')
    cy.get('.dividir')
      .click()
    cy.get('.divi1')
      .type('{selectall}')
      .type(12)
      .should('have.value', '12')
    cy.get('.divi2')
      .type('{selectall}')
      .type(0)
      .should('have.value', '0')
    cy.get('.dividir')
      .click()
    cy.contains('Calculator results')
      .click()
    cy.contains('Suma: 34 + 56 = 90')
    cy.contains('Multiplicacion: 10 * 5 = 50')
    cy.contains('Resta: 15 - 10 = 5')
    cy.contains('Division: 0 / 5 = 0')
    cy.contains('No se puede dividir entre 0!')
  })
})
